Remaining tasks to do :

0 - Updates on Samantha
  0.1 - Not fast enough : takes decisions every 5 minutes, while the market can change drastically within 1 minute
  0.2 - When launching it : forbid it to take any position before the signal is flat, then take decisions
  0.3 - If past order was lost (it if reached the stop loss) : forbid it to take another order right after (within 15 minute) in the same direction (done, but change it sligtly)
  0.4 - Make it learn of its past errors

1 - ML model for news analysis
  1.1 - Make model (done)
  1.2 - Get access to Bloomberg terminal 
  
2 - ML model for market analysis
  2.1 - Finish formation on ML
  2.2 - Design model
  2.3 - Implement model
  
3 - ML model for classification of time periods (hours, days, months)
  3.1 - Finish formation on ML
  3.2 - Design model
  3.3 - Implement model (choose optimal amount to bet)
  
4 - Interface for code
  4.1 - Design interface
  4.2 - Find appropriate package
  4.3 - Train on package 
  4.4 - Implement interface
  4.5 - Window for opened stock exchanges in real time

5 - Ability to trade on multi-market
  5.1 - Determine interesting markets
  5.2 - Implement multi-choice market and multi-bet

6 - Calculate deflator
  6.1 - Implement deflator formula
  6.2 - Forbid/Restrict use of robot on market for high values of Deflator

7 - ML model for best timing on decisions
  7.1 - Finish formation on ML (especially on time series prediction)
  7.2 - Design model
  7.3 - Implement model : make it learn, using indicators and past prices, the best moment to open and close positions
  
8 - ML model for sl and tp
  8.1 - Finish formation on ML
  8.2 - Design model
  8.3 - Implement model : make it choose perfectly the stop loss and take profit rule on each trade, according to the the behaviour of the market
  
9 - Backtesting.py
  9.1 - Reach 70 % - 75 % minimum wins rate : design a great strategy, very precise 
  
  
  
